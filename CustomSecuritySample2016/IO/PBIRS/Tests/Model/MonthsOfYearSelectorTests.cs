/* 
 * Power BI Report Server REST API
 *
 * The Power BI Report Server REST API provides programmatic access to the report server catalog.  For example, basic CRUD operations can be done on folders, reports, KPIs, data sources, datasets, refresh plans, subscriptions, etc.     The REST API can also be used to provide more advanced functionality, such as: * Navigate the folder hierarchy * Discover the contents of a folder * Download a report definition * Modify default report parameters * Change or execute a refresh plan * A whole lot more  The REST API is a RESTful successor to the legacy [SOAP API](https://msdn.microsoft.com/library/reportservice2010.reportingservice2010.aspx).  Since Power BI Report Server is a superset of SQL Server Reporting Services, the Power BI Report Server REST API is a superset of the  [SQL Server Reporting Services REST API](https://app.swaggerhub.com/apis/microsoft-rs/SSRS/2.0).  __Power BI Report Server API Additions__ * January 2019 Release   * /PowerBIReports({Id})/DataModelRoles (GET)   * /PowerBIReports({Id})/DataModelRoleAssignments (GET & PUT)  Happy coding!  __API samples:__ https://github.com/Microsoft/Reporting-Services  __Developer documentation:__ https://powerbi.microsoft.com/documentation/reportserver-developer-handbook-overview/  __Team Blog:__  https://powerbi.microsoft.com/blog/  __Support forums:__  https://community.powerbi.com/t5/Report-Server/bd-p/ReportServer 
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.PBIRS.Swagger.Api;
using IO.PBIRS.Swagger.Model;
using IO.PBIRS.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.PBIRS.Swagger.Test
{
    /// <summary>
    ///  Class for testing MonthsOfYearSelector
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class MonthsOfYearSelectorTests
    {
        // TODO uncomment below to declare an instance variable for MonthsOfYearSelector
        //private MonthsOfYearSelector instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of MonthsOfYearSelector
            //instance = new MonthsOfYearSelector();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MonthsOfYearSelector
        /// </summary>
        [Test]
        public void MonthsOfYearSelectorInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" MonthsOfYearSelector
            //Assert.IsInstanceOfType<MonthsOfYearSelector> (instance, "variable 'instance' is a MonthsOfYearSelector");
        }


        /// <summary>
        /// Test the property 'January'
        /// </summary>
        [Test]
        public void JanuaryTest()
        {
            // TODO unit test for the property 'January'
        }
        /// <summary>
        /// Test the property 'February'
        /// </summary>
        [Test]
        public void FebruaryTest()
        {
            // TODO unit test for the property 'February'
        }
        /// <summary>
        /// Test the property 'March'
        /// </summary>
        [Test]
        public void MarchTest()
        {
            // TODO unit test for the property 'March'
        }
        /// <summary>
        /// Test the property 'April'
        /// </summary>
        [Test]
        public void AprilTest()
        {
            // TODO unit test for the property 'April'
        }
        /// <summary>
        /// Test the property 'May'
        /// </summary>
        [Test]
        public void MayTest()
        {
            // TODO unit test for the property 'May'
        }
        /// <summary>
        /// Test the property 'June'
        /// </summary>
        [Test]
        public void JuneTest()
        {
            // TODO unit test for the property 'June'
        }
        /// <summary>
        /// Test the property 'July'
        /// </summary>
        [Test]
        public void JulyTest()
        {
            // TODO unit test for the property 'July'
        }
        /// <summary>
        /// Test the property 'August'
        /// </summary>
        [Test]
        public void AugustTest()
        {
            // TODO unit test for the property 'August'
        }
        /// <summary>
        /// Test the property 'September'
        /// </summary>
        [Test]
        public void SeptemberTest()
        {
            // TODO unit test for the property 'September'
        }
        /// <summary>
        /// Test the property 'October'
        /// </summary>
        [Test]
        public void OctoberTest()
        {
            // TODO unit test for the property 'October'
        }
        /// <summary>
        /// Test the property 'November'
        /// </summary>
        [Test]
        public void NovemberTest()
        {
            // TODO unit test for the property 'November'
        }
        /// <summary>
        /// Test the property 'December'
        /// </summary>
        [Test]
        public void DecemberTest()
        {
            // TODO unit test for the property 'December'
        }

    }

}
