/*
 * Power BI Report Server REST API
 * The Power BI Report Server REST API provides programmatic access to the report server catalog.  For example, basic CRUD operations can be done on folders, reports, KPIs, data sources, datasets, refresh plans, subscriptions, etc.     The REST API can also be used to provide more advanced functionality, such as: * Navigate the folder hierarchy * Discover the contents of a folder * Download a report definition * Modify default report parameters * Change or execute a refresh plan * A whole lot more  The REST API is a RESTful successor to the legacy [SOAP API](https://msdn.microsoft.com/library/reportservice2010.reportingservice2010.aspx).  Since Power BI Report Server is a superset of SQL Server Reporting Services, the Power BI Report Server REST API is a superset of the  [SQL Server Reporting Services REST API](https://app.swaggerhub.com/apis/microsoft-rs/SSRS/2.0).  __Power BI Report Server API Additions__ * January 2019 Release   * /PowerBIReports({Id})/DataModelRoles (GET)   * /PowerBIReports({Id})/DataModelRoleAssignments (GET & PUT)  Happy coding!  __API samples:__ https://github.com/Microsoft/Reporting-Services  __Developer documentation:__ https://powerbi.microsoft.com/documentation/reportserver-developer-handbook-overview/  __Team Blog:__  https://powerbi.microsoft.com/blog/  __Support forums:__  https://community.powerbi.com/t5/Report-Server/bd-p/ReportServer 
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ExtensionSettings', 'model/ParameterValue'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ExtensionSettings'), require('./ParameterValue'));
  } else {
    // Browser globals (root is window)
    if (!root.PowerBiReportServerRestApi) {
      root.PowerBiReportServerRestApi = {};
    }
    root.PowerBiReportServerRestApi.Subscription = factory(root.PowerBiReportServerRestApi.ApiClient, root.PowerBiReportServerRestApi.ExtensionSettings, root.PowerBiReportServerRestApi.ParameterValue);
  }
}(this, function(ApiClient, ExtensionSettings, ParameterValue) {
  'use strict';

  /**
   * The Subscription model module.
   * @module model/Subscription
   * @version 2.0
   */

  /**
   * Constructs a new <code>Subscription</code>.
   * An object that defines a subscription. A Reporting Services subscription allows a user to subscribe to a Report or Data Source and then to automatically receive an update whenever the item is updated.
   * @alias module:model/Subscription
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Subscription</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Subscription} obj Optional instance to populate.
   * @return {module:model/Subscription} The populated <code>Subscription</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('Id'))
        obj.id = ApiClient.convertToType(data['Id'], 'String');
      if (data.hasOwnProperty('Owner'))
        obj.owner = ApiClient.convertToType(data['Owner'], 'String');
      if (data.hasOwnProperty('IsDataDriven'))
        obj.isDataDriven = ApiClient.convertToType(data['IsDataDriven'], 'Boolean');
      if (data.hasOwnProperty('Description'))
        obj.description = ApiClient.convertToType(data['Description'], 'String');
      if (data.hasOwnProperty('Report'))
        obj.report = ApiClient.convertToType(data['Report'], 'String');
      if (data.hasOwnProperty('IsActive'))
        obj.isActive = ApiClient.convertToType(data['IsActive'], 'Boolean');
      if (data.hasOwnProperty('EventType'))
        obj.eventType = ApiClient.convertToType(data['EventType'], 'String');
      if (data.hasOwnProperty('ScheduleDescription'))
        obj.scheduleDescription = ApiClient.convertToType(data['ScheduleDescription'], 'String');
      if (data.hasOwnProperty('LastRunTime'))
        obj.lastRunTime = ApiClient.convertToType(data['LastRunTime'], 'Date');
      if (data.hasOwnProperty('LastStatus'))
        obj.lastStatus = ApiClient.convertToType(data['LastStatus'], 'String');
      if (data.hasOwnProperty('ExtensionSettings'))
        obj.extensionSettings = ExtensionSettings.constructFromObject(data['ExtensionSettings']);
      if (data.hasOwnProperty('DeliveryExtension'))
        obj.deliveryExtension = ApiClient.convertToType(data['DeliveryExtension'], 'String');
      if (data.hasOwnProperty('LocalizedDeliveryExtensionName'))
        obj.localizedDeliveryExtensionName = ApiClient.convertToType(data['LocalizedDeliveryExtensionName'], 'String');
      if (data.hasOwnProperty('ModifiedBy'))
        obj.modifiedBy = ApiClient.convertToType(data['ModifiedBy'], 'String');
      if (data.hasOwnProperty('ModifiedDate'))
        obj.modifiedDate = ApiClient.convertToType(data['ModifiedDate'], 'Date');
      if (data.hasOwnProperty('ParameterValues'))
        obj.parameterValues = ApiClient.convertToType(data['ParameterValues'], [ParameterValue]);
    }
    return obj;
  }

  /**
   * A unique UUID value that specifies the identifier by which this Subscription can be referenced in requests or in other defined objects.
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * A string value that specifies the owner of the Subscription.
   * @member {String} owner
   */
  exports.prototype.owner = undefined;

  /**
   * A boolean value that specifies whether the members of the distribution list for the subscription are computed based on data.
   * @member {Boolean} isDataDriven
   */
  exports.prototype.isDataDriven = undefined;

  /**
   * A string value that contains descriptive text about the Subscription.
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * A string value that specifies the path of the report for this Subscription.
   * @member {String} report
   */
  exports.prototype.report = undefined;

  /**
   * A boolean value that specifies whether the Subscription is currently active.
   * @member {Boolean} isActive
   */
  exports.prototype.isActive = undefined;

  /**
   * A string specifying the type of event that triggers the Subscription.
   * @member {String} eventType
   */
  exports.prototype.eventType = undefined;

  /**
   * A string value that contains descriptive text about the schedule referenced in the Schedule property.
   * @member {String} scheduleDescription
   */
  exports.prototype.scheduleDescription = undefined;

  /**
   * A string value that contains the date-time that the schedule was last run.
   * @member {Date} lastRunTime
   */
  exports.prototype.lastRunTime = undefined;

  /**
   * A string specifying the Status of the last run.
   * @member {String} lastStatus
   */
  exports.prototype.lastStatus = undefined;

  /**
   * @member {module:model/ExtensionSettings} extensionSettings
   */
  exports.prototype.extensionSettings = undefined;

  /**
   * An object that specifies the DeliveryExtension that will be used with this Schedule's report delivery.
   * @member {String} deliveryExtension
   */
  exports.prototype.deliveryExtension = undefined;

  /**
   * Localized version of extension name when available.
   * @member {String} localizedDeliveryExtensionName
   */
  exports.prototype.localizedDeliveryExtensionName = undefined;

  /**
   * A string value that contains the network user name of the last user to modify the subscription.
   * @member {String} modifiedBy
   */
  exports.prototype.modifiedBy = undefined;

  /**
   * A string value that contains the date-time of the last modification to the subscription.
   * @member {Date} modifiedDate
   */
  exports.prototype.modifiedDate = undefined;

  /**
   * An array of items of type ParameterValue that specify the parameter values for the subscription.
   * @member {Array.<module:model/ParameterValue>} parameterValues
   */
  exports.prototype.parameterValues = undefined;

  return exports;

}));
